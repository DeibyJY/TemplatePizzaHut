{%- liquid
  assign layout = settings.quick_view_layout
  assign max_thumbnail_to_show = settings.thumbnail_to_show
  assign current_variant = product.selected_or_first_available_variant
  assign variantCount = product.variants | size
  assign featured_media_aspect_ratio = product.featured_media.aspect_ratio
  if product.featured_media.aspect_ratio == null
    assign featured_media_aspect_ratio = 1
  endif
  assign media_size = settings.quick_view_product_image_ratio
  assign portrait_aspect_ratio = settings.quick_view_portrait_aspect_ratio | append: '%'
  assign quick_view_zoomed_image = settings.quick_view_zoomed_image
  assign show_quick_view_badge = settings.show_quick_view_badge
  assign fontsize_text = settings.fontsize_text
  assign color_title = settings.color_title
  assign show_quick_view_review = settings.show_quick_view_review
  assign word_number_short_desc = settings.word_number_short_desc
  assign fontsize_short_desc = settings.fontsize_short_desc
  assign color_short_desc = settings.color_short_desc
  assign show_quick_view_sold_in = settings.show_quick_view_sold_in
  if show_quick_view_sold_in
    assign quick_view_sold_in_number = settings.quick_view_sold_in_number
    assign quick_view_sold_in_hours = settings.quick_view_sold_in_hours
  endif
  assign show_quick_view_short_description = settings.show_quick_view_short_description
  assign show_quick_view_short_description = settings.show_quick_view_short_description
  assign fontsize_price = settings.fontsize_price
  assign show_countdown = settings.show_countdown
  if show_countdown
    assign countdown_type = settings.countdown_type
    assign countdown_time = settings.countdown_time
    assign countdown_collection = settings.countdown_collection | downcase | handle
    assign countdown_style = settings.countdown_style
  endif
  assign show_quick_view_vendor = settings.show_quick_view_vendor
  assign show_quick_view_availability = settings.show_quick_view_availability
  assign show_quick_view_sku = settings.show_quick_view_sku
  assign show_quick_view_product_type = settings.show_quick_view_product_type
  assign quick_view_picker_type = settings.quick_view_picker_type
  assign stock_level_display = settings.stock_level_display
  assign show_hot_stock = settings.show_hot_stock
  if show_hot_stock
    assign productMaxStock = settings.hot_stock_limit | plus: 0
  endif
  assign show_quick_view_qty = settings.show_quick_view_qty
  assign show_quick_view_subtotal = settings.show_quick_view_subtotal
  assign show_subtotal = false
  assign subtotal = 0
  if show_quick_view_subtotal and show_quick_view_qty
    assign show_subtotal = true
    assign subtotal = current_variant.price | money
  endif
  assign show_dynamic_checkout = settings.show_dynamic_checkout
  assign show_quick_view_customer_viewing = settings.show_quick_view_customer_viewing
  if show_quick_view_customer_viewing
    assign quick_view_customer_viewing_number = settings.quick_view_customer_viewing_number
    assign quick_view_customer_viewing_time = settings.quick_view_customer_viewing_time
  endif
  assign show_quick_view_trust_image = settings.show_quick_view_trust_image
  assign show_quick_view_share = settings.show_quick_view_share
  if show_quick_view_share
    assign share_product_script = settings.share_product_script
  endif

  assign show_customization_option = settings.show_customization_option
  if show_customization_option
    assign has_customization_option = false
    assign customization_option_type = settings.customization_option_type
    assign customization_option_hidden = settings.customization_option_hidden
    if customization_option_type == 'all'
      assign has_customization_option = true
    elsif customization_option_type == 'tag'
      assign customization_option_tags = settings.customization_option_tags | downcase | strip | split: ','
      for tag in customization_option_tags
        assign tagtitle = tag | strip
        assign productTag = product.tags | downcase
        if productTag contains tagtitle
          assign has_customization_option = true
        endif
      endfor
    elsif customization_option_type == 'collection'
      assign customization_option_collection = settings.customization_option_collection | downcase | handle
      if customization_option_collection != blank
        for collection in product.collections
          assign collection_title = collection.title | downcase | handle
          if collection_title == customization_option_collection
            assign has_customization_option = true
          endif
        endfor
      endif
    endif
    assign customization_option_1 = settings.customization_option_1
    assign customization_option_2 = settings.customization_option_2
  endif
  assign show_quick_view_variant_image_group = settings.show_quick_view_variant_image_group
-%}
<style type="text/css">
  .quickView .productView-thumbnail .productView-thumbnail-link:after{
      padding-bottom: {{ portrait_aspect_ratio }};
  }
</style>
{{ 'component-product-form.css' | asset_url | stylesheet_tag }}
<style type="text/css">
  .quickView .productView-thumbnail .productView-thumbnail-link:after{padding-bottom: {{ portrait_aspect_ratio }}}
  {% if settings.button_hover_style == '2' %}
    .productView-action .button {
      position: relative;
      overflow: hidden;
      z-index: 0;
    }
    .productView-action .button:before {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      transform: unset;
      display: unset;
      border: unset;
      border-radius: unset;
      width: unset;
      height: unset;
      animation: unset;
      opacity: unset;
      visibility: unset;
      background: var(--atc-bg-color-hover);
      right: 100%;
      z-index: -1;
      transition: all 400ms ease;
    }
    .productView-action .button:hover {
      color: var(--atc-color-hover);
      border-color: var(--atc-border-color-hover);
    }
    .productView-action .button:hover svg {
      fill: var(--atc-color-hover);
    }
    .productView-action .button:hover:before {
      right: 0%;
    }
  {% elsif settings.button_hover_style == '3' %}
    .productView-action .button {
      position: relative;
      overflow: hidden;
      z-index: 0;
    }
    .productView-action .button:before {
      content: "";
      position: absolute;
      top: 0;
      left: -70%;
      display: unset;
      border: unset;
      border-radius: unset;
      animation: unset;
      opacity: unset;
      visibility: unset;
      background: var(--atc-bg-color-hover);
      z-index: -1;
      transition: all 400ms ease;
      clip-path: polygon(25px 0%, 100% 0%, 100% 100%, 0% 100%);
      width: 70%;
      height: 100%;
      transform: rotateY(180deg);
    }
    .productView-action .button:after {
      content: "";
      position: absolute;
      top: 0;
      right: -70%;
      transform: unset;
      display: unset;
      border: unset;
      border-radius: unset;
      animation: unset;
      opacity: unset;
      visibility: unset;
      background: var(--atc-bg-color-hover);
      z-index: -1;
      transition: all 400ms ease;
      clip-path: polygon(25px 0%, 100% 0%, 100% 100%, 0% 100%);
      width: 70%;
      height: 100%;
    }
    .productView-action .button:hover {
      color: var(--atc-color-hover);
      border-color: var(--atc-border-color-hover);
    }
    .productView-action .button:hover svg {
      fill: var(--atc-color-hover);
    }
    .productView-action .button:hover:before {
      left: calc(0% - 2px);
    }
    .productView-action .button:hover:after {
      right: calc(0% - 2px);
    }
  {% elsif settings.button_hover_style == '4' %}
    .productView-action .button {
      position: relative;
      overflow: hidden;
      z-index: 0;
    }
    .productView-action .button:before {
      content: "";
      position: absolute;
      top: 0;
      left: -70%;
      display: unset;
      border: unset;
      border-radius: unset;
      animation: unset;
      opacity: unset;
      visibility: unset;
      background: var(--atc-bg-color-hover);
      z-index: -1;
      transition: all 400ms ease;
      clip-path: polygon(25px 0%, 100% 0%, 100% 100%, 0% 100%);
      width: 70%;
      height: 100%;
      transform: rotateY(180deg);
    }
    .productView-action .button:after {
      content: "";
      position: absolute;
      top: 0;
      right: -70%;
      transform: unset;
      display: unset;
      border: unset;
      border-radius: unset;
      animation: unset;
      opacity: unset;
      visibility: unset;
      background: var(--atc-bg-color-hover);
      z-index: -1;
      transition: all 400ms ease;
      clip-path: polygon(0px 0%, 100% 0%, 100% 100%, 25px 100%);
      width: 70%;
      height: 100%;
    }
    .productView-action .button:hover {
      color: var(--atc-color-hover);;
      border-color: var(--atc-border-color-hover);
    }
    .productView-action .button:hover svg {
      fill: var(--atc-color-hover);
    }
    .productView-action .button:hover:before {
      left: calc(0% - 2px);
    }
    .productView-action .button:hover:after {
      right: calc(0% - 2px);
    }
  {% elsif settings.button_hover_style == '5' %}
    .productView-action .button {
      position: relative;
      overflow: hidden;
      z-index: 0;
    }
    .productView-action .button:before {
      content: "";
      position: absolute;
      top: 50%;
      left: -30px;
      display: unset;
      border: unset;
      animation: unset;
      opacity: unset;
      visibility: unset;
      background: var(--atc-bg-color-hover);
      z-index: -1;
      transition: all 400ms ease;
      width: 20px;
      height: 20px;
      transform: translateY(-50%);
      border-radius: 100%;
    }
    .productView-action .button:after {
      content: "";
      position: absolute;
      top: 50%;
      right: -30px;
      display: unset;
      border: unset;
      animation: unset;
      opacity: unset;
      visibility: unset;
      background: var(--atc-bg-color-hover);
      z-index: -1;
      transition: all 400ms ease;
      width: 20px;
      height: 20px;
      transform: translateY(-50%);
      border-radius: 100%;
    }
    .productView-action .button:hover {
      color: var(--atc-color-hover);
      border-color: var(--atc-border-color-hover);
    }
    .productView-action .button:hover svg {
      fill: var(--atc-color-hover);
    }
    .productView-action .button:hover:before {
      -webkit-animation: criss-cross-left 0.8s both;
      animation: criss-cross-left 0.8s both;
      -webkit-animation-direction: alternate;
      animation-direction: alternate;
    }
    .productView-action .button:hover:after {
      -webkit-animation: criss-cross-right 0.8s both;
      animation: criss-cross-right 0.8s both;
      -webkit-animation-direction: alternate;
      animation-direction: alternate;
    }
    @-webkit-keyframes criss-cross-left {
      0% {
        left: -30px;
      }
      50% {
        left: calc(50% - 10px);
        width: 20px;
        height: 20px;
      }
      100% {
        left: 40%;
        width: 375px;
        height: 375px;
      }
    }

    @keyframes criss-cross-left {
      0% {
        left: -30px;
      }
      50% {
        left: calc(50% - 10px);
        width: 20px;
        height: 20px;
      }
      100% {
        left: 40%;
        width: 375px;
        height: 375px;
      }
    }
    @-webkit-keyframes criss-cross-right {
      0% {
        right: -30px;
      }
      50% {
        right: calc(50% - 10px);
        width: 20px;
        height: 20px;
      }
      100% {
        right: calc(50% - 10px);
        width: 375px;
        height: 375px;
      }
    }
    @keyframes criss-cross-right {
      0% {
        right: -30px;
      }
      50% {
        right: calc(50% - 10px);
        width: 20px;
        height: 20px;
      }
      100% {
        right: calc(50% - 10px);
        width: 375px;
        height: 375px;
      }
    }
  {% else %}
    .productView-action .button:hover {
        color: var(--atc-color-hover);
        background: var(--atc-bg-color-hover);
        border-color: var(--atc-border-color-hover);
    }
  {% endif %}
  {% if settings.button_hover_style == '2' %}
    .productView-payment .shopify-payment-button .shopify-payment-button__button {
      position: relative;
      overflow: hidden;
      z-index: 0;
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:before {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      transform: unset;
      display: unset;
      border: unset;
      border-radius: unset;
      width: unset;
      height: unset;
      animation: unset;
      opacity: unset;
      visibility: unset;
      background: var(--bin-bg-color-hover);
      right: 100%;
      z-index: -1;
      transition: all 400ms ease;
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:hover {
        color: var(--bin-color-hover);
        border-color: var(--bin-border-color-hover);
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:hover svg {
      fill: var(--bin-color-hover);
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:hover:before {
      right: 0%;
    }
  {% elsif settings.button_hover_style == '3' %}
    .productView-payment .shopify-payment-button .shopify-payment-button__button {
      position: relative;
      overflow: hidden;
      z-index: 0;
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:before {
      content: "";
      position: absolute;
      top: 0;
      left: -70%;
      display: unset;
      border: unset;
      border-radius: unset;
      animation: unset;
      opacity: unset;
      visibility: unset;
      background: var(--bin-bg-color-hover);
      z-index: -1;
      transition: all 400ms ease;
      clip-path: polygon(25px 0%, 100% 0%, 100% 100%, 0% 100%);
      width: 70%;
      height: 100%;
      transform: rotateY(180deg);
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:after {
      content: "";
      position: absolute;
      top: 0;
      right: -70%;
      transform: unset;
      display: unset;
      border: unset;
      border-radius: unset;
      animation: unset;
      opacity: unset;
      visibility: unset;
      background: var(--bin-bg-color-hover);
      z-index: -1;
      transition: all 400ms ease;
      clip-path: polygon(25px 0%, 100% 0%, 100% 100%, 0% 100%);
      width: 70%;
      height: 100%;
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:hover {
      color: var(--bin-color-hover);
      border-color: var(--bin-border-color-hover);
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:hover svg {
      fill: var(--bin-color-hover);
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:hover:before {
      left: calc(0% - 2px);
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:hover:after {
      right: calc(0% - 2px);
    }
  {% elsif settings.button_hover_style == '4' %}
    .productView-payment .shopify-payment-button .shopify-payment-button__button {
      position: relative;
      overflow: hidden;
      z-index: 0;
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:before {
      content: "";
      position: absolute;
      top: 0;
      left: -70%;
      display: unset;
      border: unset;
      border-radius: unset;
      animation: unset;
      opacity: unset;
      visibility: unset;
      background: var(--bin-bg-color-hover);
      z-index: -1;
      transition: all 400ms ease;
      clip-path: polygon(25px 0%, 100% 0%, 100% 100%, 0% 100%);
      width: 70%;
      height: 100%;
      transform: rotateY(180deg);
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:after {
      content: "";
      position: absolute;
      top: 0;
      right: -70%;
      transform: unset;
      display: unset;
      border: unset;
      border-radius: unset;
      animation: unset;
      opacity: unset;
      visibility: unset;
      background: var(--bin-bg-color-hover);
      z-index: -1;
      transition: all 400ms ease;
      clip-path: polygon(0px 0%, 100% 0%, 100% 100%, 25px 100%);
      width: 70%;
      height: 100%;
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:hover {
      color: var(--bin-color-hover);
      border-color: var(--bin-border-color-hover);
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:hover svg {
      fill: var(--bin-color-hover);
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:hover:before {
      left: calc(0% - 2px);
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:hover:after {
      right: calc(0% - 2px);
    }
  {% elsif settings.button_hover_style == '5' %}
    .productView-payment .shopify-payment-button .shopify-payment-button__button {
      position: relative;
      overflow: hidden;
      z-index: 0;
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:before {
      content: "";
      position: absolute;
      top: 50%;
      left: -30px;
      display: unset;
      border: unset;
      animation: unset;
      opacity: unset;
      visibility: unset;
      background: var(--bin-bg-color-hover);
      z-index: -1;
      transition: all 400ms ease;
      width: 20px;
      height: 20px;
      transform: translateY(-50%);
      border-radius: 100%;
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:after {
      content: "";
      position: absolute;
      top: 50%;
      right: -30px;
      display: unset;
      border: unset;
      animation: unset;
      opacity: unset;
      visibility: unset;
      background: var(--bin-bg-color-hover);
      z-index: -1;
      transition: all 400ms ease;
      width: 20px;
      height: 20px;
      transform: translateY(-50%);
      border-radius: 100%;
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:hover {
      color: var(--bin-color-hover);
      border-color: var(--bin-border-color-hover);
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:hover svg {
      fill: var(--bin-color-hover);
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:hover:before {
      -webkit-animation: criss-cross-left 0.8s both;
      animation: criss-cross-left 0.8s both;
      -webkit-animation-direction: alternate;
      animation-direction: alternate;
    }
    .productView-payment .shopify-payment-button .shopify-payment-button__button:hover:after {
      -webkit-animation: criss-cross-right 0.8s both;
      animation: criss-cross-right 0.8s both;
      -webkit-animation-direction: alternate;
      animation-direction: alternate;
    }
    @-webkit-keyframes criss-cross-left {
      0% {
        left: -30px;
      }
      50% {
        left: calc(50% - 10px);
        width: 20px;
        height: 20px;
      }
      100% {
        left: 40%;
        width: 375px;
        height: 375px;
      }
    }

    @keyframes criss-cross-left {
      0% {
        left: -30px;
      }
      50% {
        left: calc(50% - 10px);
        width: 20px;
        height: 20px;
      }
      100% {
        left: 40%;
        width: 375px;
        height: 375px;
      }
    }
    @-webkit-keyframes criss-cross-right {
      0% {
        right: -30px;
      }
      50% {
        right: calc(50% - 10px);
        width: 20px;
        height: 20px;
      }
      100% {
        right: calc(50% - 10px);
        width: 375px;
        height: 375px;
      }
    }
    @keyframes criss-cross-right {
      0% {
        right: -30px;
      }
      50% {
        right: calc(50% - 10px);
        width: 20px;
        height: 20px;
      }
      100% {
        right: calc(50% - 10px);
        width: 375px;
        height: 375px;
      }
    }
  {% else %}
    .productView-payment .shopify-payment-button .shopify-payment-button__button:hover {
        color: var(--bin-color-hover);
        background: var(--bin-bg-color-hover);
        border-color: var(--bin-border-color-hover);
        box-shadow: unset;
    }
  {% endif %}
</style>
{%- if variantCount > 0 and product.has_only_default_variant != true -%}
  <script>
    window.quick_view_inven_array_{{ product.id }} = {
        {% for variant in product.variants %}
            '{{ variant.id }}': '{{ variant.inventory_quantity }}',
        {% endfor %}
    };
  </script>
{%- endif -%}
<script>
    window.quick_view_subtotal = {
        show: {{ show_subtotal }},
        text: `{{ 'products.product.sub_total' | t : value : '[value]' }}`
    };
    window.quick_view_selling_array_{{ product.id }} = {
      {% for variant in product.variants %}
          '{{ variant.id }}': '{{ variant.inventory_policy }}',
      {% endfor %}
   };
</script>

<div
  class="productView quickView scoder-quickView layout-{{ layout }}{% if product.media.size == 0 %} productView-no-media{% endif %}"
  data-product-quickview-handle="{{ product.handle }}"
>
  <div
    style="display: flex; width: 100%; height: 80vh; gap: 20px; margin: 0 !important; padding: 0 !important;"
    class="productView-top"
  >
    <div
      style="flex: 1; min-height: 0; overflow-y: auto; background-color: blue;"
      class="container-prueba"
    ></div>
    <div
      style="flex: 1; min-height: 0; overflow-y: auto; background-color: red;"
      class="container-prueba-2"
    ></div>
  </div>
</div>
{%- if show_size_chart and has_size_chart -%}
  {% render 'scoder-size-chart-popup',
    product: product,
    size_chart_type: size_chart_type,
    size_chart_image: size_chart_image
  %}
{%- endif -%}
{%- if show_compare_color and isColor -%}
  {% render 'scoder-compare-color-popup',
    product: product,
    show_compare_color_drop_drap: show_compare_color_drop_drap,
    index: index
  %}
{%- endif -%}
<script>
  function incrementQuantity(button) {
    const input = button.parentElement.querySelector('input');
    input.value = parseInt(input.value) + 1;
  }

  function decrementQuantity(button) {
    const input = button.parentElement.querySelector('input');
    if (parseInt(input.value) > 0) {
      input.value = parseInt(input.value) - 1;
    }
  }
</script>
<style>
  .opcion-principal-detalle-oferta input[type='radio'] {
    opacity: 1 !important;
    visibility: visible !important;
  }

  .opcion-principal-detalle-oferta input[type='radio']:checked {
    border-width: 5px !important; /* Borde más grueso cuando está seleccionado */
  }

  .opcion-principal-detalle-oferta input[type='radio']:hover {
    background-color: rgba(0, 0, 0, 0.05);
  }

  input[type='number'] {
    -webkit-user-select: none !important;
    text-align: center !important;
    pointer-events: none !important;
  }

  input[type='number']::-webkit-inner-spin-button,
  input[type='number']::-webkit-outer-spin-button {
    -webkit-appearance: none !important;
    margin: 0 !important;
  }
</style>
